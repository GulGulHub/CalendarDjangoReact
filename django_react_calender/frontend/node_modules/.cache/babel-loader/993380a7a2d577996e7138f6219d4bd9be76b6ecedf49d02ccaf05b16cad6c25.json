{"ast":null,"code":"var _jsxFileName = \"/home/guelden/Dokumente/Frauenloop/Calender/Calender_react/react-calendar/src/components/UpcomingEvents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpcomingEvents() {\n  _s();\n  const [appointments, setAppointments] = useState({});\n  useEffect(() => {\n    // Fetch appointments from localStorage and set the state\n    const savedAppointments = JSON.parse(localStorage.getItem('appointments')) || {};\n    setAppointments(savedAppointments);\n  }, []);\n\n  // Function to sort appointments by date\n  const sortAppointmentsByDate = appointments => {\n    return Object.entries(appointments).sort((_ref, _ref2) => {\n      let [dateStringA] = _ref;\n      let [dateStringB] = _ref2;\n      const dateA = new Date(dateStringA);\n      const dateB = new Date(dateStringB);\n      return dateA - dateB;\n    });\n  };\n\n  // Get the current date and next week's date\n  const currentDate = new Date();\n  const nextWeekDate = new Date(currentDate);\n  nextWeekDate.setDate(nextWeekDate.getDate() + 7);\n\n  // Filter today's events and upcoming events\n  const filteredAppointments = sortAppointmentsByDate(appointments).filter(_ref3 => {\n    let [dateString, _] = _ref3;\n    const appointmentDate = new Date(dateString);\n    return appointmentDate >= currentDate && appointmentDate < nextWeekDate;\n  });\n\n  // Separate today's events and upcoming events\n  const todaysEvents = [];\n  const upcomingEvents = [];\n  const today = currentDate.toDateString();\n  filteredAppointments.forEach(_ref4 => {\n    let [dateString, appointment] = _ref4;\n    const date = new Date(dateString);\n    const dateStringFormatted = date.toDateString();\n    if (dateStringFormatted === today) {\n      todaysEvents.push(appointment);\n    } else {\n      upcomingEvents.push({\n        date: dateStringFormatted,\n        appointment\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-events\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), todaysEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todaysEvents.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: appointment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events for today.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), upcomingEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: upcomingEvents.map((_ref5, index) => {\n        let {\n          date,\n          appointment\n        } = _ref5;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [date, \": \", appointment]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No upcoming events for the rest of the week.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingEvents, \"brmKSxpi7kUuOSidwGKD+KFtFM0=\");\n_c = UpcomingEvents;\nexport default UpcomingEvents;\nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpcomingEvents","_s","appointments","setAppointments","savedAppointments","JSON","parse","localStorage","getItem","sortAppointmentsByDate","Object","entries","sort","_ref","_ref2","dateStringA","dateStringB","dateA","Date","dateB","currentDate","nextWeekDate","setDate","getDate","filteredAppointments","filter","_ref3","dateString","_","appointmentDate","todaysEvents","upcomingEvents","today","toDateString","forEach","_ref4","appointment","date","dateStringFormatted","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","_ref5","_c","$RefreshReg$"],"sources":["/home/guelden/Dokumente/Frauenloop/Calender/Calender_react/react-calendar/src/components/UpcomingEvents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nfunction UpcomingEvents() {\n  const [appointments, setAppointments] = useState({});\n\n  useEffect(() => {\n    // Fetch appointments from localStorage and set the state\n    const savedAppointments = JSON.parse(localStorage.getItem('appointments')) || {};\n    setAppointments(savedAppointments);\n  }, []);\n\n  // Function to sort appointments by date\n  const sortAppointmentsByDate = (appointments) => {\n    return Object.entries(appointments).sort(([dateStringA], [dateStringB]) => {\n      const dateA = new Date(dateStringA);\n      const dateB = new Date(dateStringB);\n      return dateA - dateB;\n    });\n  };\n\n  // Get the current date and next week's date\n  const currentDate = new Date();\n  const nextWeekDate = new Date(currentDate);\n  nextWeekDate.setDate(nextWeekDate.getDate() + 7);\n\n  // Filter today's events and upcoming events\n  const filteredAppointments = sortAppointmentsByDate(appointments).filter(\n    ([dateString, _]) => {\n      const appointmentDate = new Date(dateString);\n      return appointmentDate >= currentDate && appointmentDate < nextWeekDate;\n    }\n  );\n\n  // Separate today's events and upcoming events\n  const todaysEvents = [];\n  const upcomingEvents = [];\n  const today = currentDate.toDateString();\n\n  filteredAppointments.forEach(([dateString, appointment]) => {\n    const date = new Date(dateString);\n    const dateStringFormatted = date.toDateString();\n    if (dateStringFormatted === today) {\n      todaysEvents.push(appointment);\n    } else {\n      upcomingEvents.push({ date: dateStringFormatted, appointment });\n    }\n  });\n\n  return (\n    <div className=\"upcoming-events\">\n      <h2>Today's Events</h2>\n      {todaysEvents.length > 0 ? (\n        <ul>\n          {todaysEvents.map((appointment, index) => (\n            <li key={index}>{appointment}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No events for today.</p>\n      )}\n\n      <h2>Upcoming Events</h2>\n      {upcomingEvents.length > 0 ? (\n        <ul>\n          {upcomingEvents.map(({ date, appointment }, index) => (\n            <li key={index}>\n              {date}: {appointment}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No upcoming events for the rest of the week.</p>\n      )}\n    </div>\n  );\n}\n\nexport default UpcomingEvents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}